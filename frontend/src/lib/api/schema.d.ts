/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/articles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the collection of Article resources.
         * @description Retrieves the collection of Article resources.
         */
        get: operations["api_apiarticles_get_collection"];
        put?: never;
        /**
         * Creates a Article resource.
         * @description Creates a Article resource.
         */
        post: operations["api_apiarticles_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/articles/random": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a Article resource.
         * @description Retrieves a Article resource.
         */
        get: operations["api_apiarticlesrandom_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/articles/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves a Article resource.
         * @description Retrieves a Article resource.
         */
        get: operations["api_apiarticles_id_get"];
        put?: never;
        post?: never;
        /**
         * Removes the Article resource.
         * @description Removes the Article resource.
         */
        delete: operations["api_apiarticles_id_delete"];
        options?: never;
        head?: never;
        /**
         * Updates the Article resource.
         * @description Updates the Article resource.
         */
        patch: operations["api_apiarticles_id_patch"];
        trace?: never;
    };
    "/api/articles/{id}/publication": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Replaces the Article resource.
         * @description Replaces the Article resource.
         */
        put: operations["api_apiarticles_idpublication_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Article: {
            readonly id?: number;
            title?: string;
            content?: string | null;
            published?: boolean;
            /** Format: date-time */
            createdAt?: string | null;
            /** Format: date-time */
            updatedAt?: string | null;
        };
        "Article.jsonld": {
            readonly "@context"?: string | ({
                "@vocab": string;
                /** @enum {string} */
                hydra: "http://www.w3.org/ns/hydra/core#";
            } & {
                [key: string]: unknown;
            });
            readonly "@id"?: string;
            readonly "@type"?: string;
            readonly id?: number;
            title?: string;
            content?: string | null;
            published?: boolean;
            /** Format: date-time */
            createdAt?: string | null;
            /** Format: date-time */
            updatedAt?: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    api_apiarticles_get_collection: {
        parameters: {
            query?: {
                /** @description The collection page number */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Article collection */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": {
                        member: components["schemas"]["Article.jsonld"][];
                        totalItems?: number;
                        /** @example {
                         *       "@id": "string",
                         *       "type": "string",
                         *       "first": "string",
                         *       "last": "string",
                         *       "previous": "string",
                         *       "next": "string"
                         *     } */
                        view?: {
                            /** Format: iri-reference */
                            "@id"?: string;
                            "@type"?: string;
                            /** Format: iri-reference */
                            first?: string;
                            /** Format: iri-reference */
                            last?: string;
                            /** Format: iri-reference */
                            previous?: string;
                            /** Format: iri-reference */
                            next?: string;
                        };
                        search?: {
                            "@type"?: string;
                            template?: string;
                            variableRepresentation?: string;
                            mapping?: {
                                "@type"?: string;
                                variable?: string;
                                property?: string | null;
                                required?: boolean;
                            }[];
                        };
                    };
                    "text/html": components["schemas"]["Article"][];
                };
            };
        };
    };
    api_apiarticles_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The new Article resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["Article.jsonld"];
                "text/html": components["schemas"]["Article"];
            };
        };
        responses: {
            /** @description Article resource created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Article.jsonld"];
                    "text/html": components["schemas"]["Article"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_apiarticlesrandom_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Article resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Article.jsonld"];
                    "text/html": components["schemas"]["Article"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_apiarticles_id_get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Article identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Article resource */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Article.jsonld"];
                    "text/html": components["schemas"]["Article"];
                };
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_apiarticles_id_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Article identifier */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Article resource deleted */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_apiarticles_id_patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Article identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated Article resource */
        requestBody: {
            content: {
                "application/merge-patch+json": components["schemas"]["Article"];
            };
        };
        responses: {
            /** @description Article resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Article.jsonld"];
                    "text/html": components["schemas"]["Article"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_apiarticles_idpublication_put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Article identifier */
                id: string;
            };
            cookie?: never;
        };
        /** @description The updated Article resource */
        requestBody: {
            content: {
                "application/ld+json": components["schemas"]["Article.jsonld"];
                "text/html": components["schemas"]["Article"];
            };
        };
        responses: {
            /** @description Article resource updated */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/ld+json": components["schemas"]["Article.jsonld"];
                    "text/html": components["schemas"]["Article"];
                };
            };
            /** @description Invalid input */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Resource not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unprocessable entity */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
